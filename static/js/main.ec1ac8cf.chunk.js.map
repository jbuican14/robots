{"version":3,"sources":["components/card/Card-component.jsx","components/card-list/CardList-component.jsx","components/search/Search-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","robot","id","name","CardList","robots","map","idx","Search","placeholder","handleChange","type","onChange","App","onSearch","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filterSearchRobots","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAEaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,oBAAf,UACE,qBACEC,IAAI,iBACJC,IAAG,+BAA0BH,EAAMI,MAAMC,GAAtC,4BAEL,mCAAML,EAAMI,MAAME,YCKTC,EAXE,SAACP,GAChB,OACE,qBAAKC,UAAU,gBAAf,SACGD,EAAMQ,OAAOC,KAAI,SAACL,EAAOM,GAAR,OAEhB,aADA,CACC,EAAD,CAAgBN,MAAOA,GAAZM,SCOJC,EAbA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC7B,OACE,mCACE,uBACEC,KAAK,SACLF,YAAaA,EACbX,UAAU,SACVc,SAAUF,OCkCHG,E,kDArCb,aAAe,IAAD,8BACZ,gBAgBFC,SAAW,SAACC,GAEV,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAjBtC,EAAKC,MAAQ,CACXf,OAAQ,GACRY,YAAa,IAJH,E,gEAOO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OACJ,EAAKT,SAAS,CACZX,OAAQoB,S,+BAUN,IAAD,EACyBC,KAAKN,MAA7Bf,EADD,EACCA,OAAQY,EADT,EACSA,YACVU,EAAqBtB,EAAOuB,QAAO,SAAC3B,GAAD,OACvCA,EAAME,KAAK0B,cAAcC,SAASb,EAAYY,kBAEhD,OACE,sBAAK/B,UAAU,MAAf,UACE,yCACA,cAAC,EAAD,CAAQW,YAAY,mBAAmBC,aAAcgB,KAAKZ,WAC1D,cAAC,EAAD,CAAUT,OAAQsB,W,GAhCRI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.ec1ac8cf.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Card = (props) => {\n  return (\n    <div className=\"ui card-container\">\n      <img\n        alt=\"funny robohash\"\n        src={`https://robohash.org/${props.robot.id}?set=set3&size=185x180`}\n      />\n      <h3> {props.robot.name}</h3>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Card } from '../card/Card-component';\n\nconst CardList = (props) => {\n  return (\n    <div className=\"ui class-list\">\n      {props.robots.map((robot, idx) => (\n        // <h1 key={idx}>{robot.name} </h1>\n        <Card key={idx} robot={robot} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst Search = ({ placeholder, handleChange }) => {\n  return (\n    <>\n      <input\n        type=\"search\"\n        placeholder={placeholder}\n        className=\"search\"\n        onChange={handleChange}\n      />\n    </>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport './styles.css';\nimport CardList from './components/card-list/CardList-component';\nimport Search from './components/search/Search-component';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: '',\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((res) => res.json())\n      .then((users) =>\n        this.setState({\n          robots: users,\n        })\n      );\n  }\n\n  onSearch = (e) => {\n    //arrow function automaticall bind this to the class\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { robots, searchField } = this.state;\n    const filterSearchRobots = robots.filter((robot) =>\n      robot.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Robots </h1>\n        <Search placeholder=\"Search Robot ...\" handleChange={this.onSearch} />\n        <CardList robots={filterSearchRobots} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}